services:
  backend_api:
    build:
      context: ./backend
    container_name: backend_api_container
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
    env_file:
      - ./backend/.env
    networks:
      - service-app

  frontend_ui:
    build:
      context: ./frontend
    container_name: frontend_ui_container
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    networks:
      - service-app

  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    networks:
      - service-app


  database_admin:
    image: adminer:latest
    container_name: database_admin_container
    ports:
      - "8080:8080"
    networks:
      - service-app

  nginx_proxy:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx_proxy_container
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - postgres_db
      - backend_api
      - frontend_ui
      - database_admin
    networks:
      - service-app

volumes:
  data:
  letsencrypt:
  postgres_data:

networks:
  service-app:
    external: true
